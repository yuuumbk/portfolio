'use strict'; $(function () { var glide = new Glide('.glide', { type: 'carousel', startAt: 0, hoverpause: !0, peek: { before: 50, after: 50 }, perView: 4, gap: -50, breakpoints: { 1500: { perView: 3, gap: -40, }, 1150: { perView: 2, gap: -30, }, 700: { perView: 1, gap: -30, } }, autoplay: 3000, }); glide.mount(); var today = new Date(); $('.birth').each(function () { var birth = $(this).data('birth'); var birthDate = new Date(birth); var age = today.getFullYear() - birthDate.getFullYear(); var month = today.getMonth() - birthDate.getMonth(); if (month < 0 || (month === 0 && today.getDate() < birthDate.getDate())) { age-- } age = Math.max(age, 0); var value = age + '歳'; var graduate = new Date('2025/03/31'); if ((graduate.getFullYear() - today.getFullYear()) >= 0) { var grade = 4 - (graduate.getFullYear() - today.getFullYear()); var month = (graduate.getMonth()) - (today.getMonth()); if (month < 0 || (month === 0 && graduate.getDate() < birthDate.getDate())) { grade++ } if (grade < 5) { value += ' - 大学' + grade + '年生' } } $(this).append(value) }); $('.glide__track, .glide__arrow').css({ display: 'block', }); var $mb = $('.skills .mb'), $list = $mb.find('.skill-list'), $item = $list.find('.skill-item'), $moreBtn = $('.skill-more-btn'), skillAnchor = 'a[href^="#skill"]', $skillBtn = $(skillAnchor), $clickBtn = $('.skill-click'), $closeBtn = $('.skill-close-btn'), defaultNum = 4, hiddenList = 'li:not(:lt(' + defaultNum + '))'; $list.addClass('has-skill-btn'); var skillBtnTimer = 0; $(window).resize(function () { if (skillBtnTimer > 0) { clearTimeout(skillBtnTimer) } skillBtnTimer = setTimeout(function () { skillBtn() }, 1000) }).trigger('resize'); function skillBtn() { if (window.matchMedia('(min-width: 1025px)').matches) { $moreBtn.show(); if (!$list.filter('.has-skill-btn').length) { $moreBtn.hide() } } else { $moreBtn.show(); if (!$list.filter('.has-skill-btn').length) { $moreBtn.hide() } } clickBtn(); closeBtn() } var workListOffset = $list.offset().top, defaultNumWorkOffset = $item.eq(defaultNum - 1).offset().top; function clickBtn() { $skillBtn.add($clickBtn).add($moreBtn).each(function () { $(this).on('click', function (e) { e.preventDefault(); $list.find('li:gt(' + (defaultNum - 1) + ')').removeClass('invisible').addClass('visible').show(); $mb.css({ marginBottom: 0 }); $list.removeClass('has-skill-btn'); $('.skill-close-btn-height').css({ height: 0 }); $moreBtn.hide(); $closeBtn.fadeIn(); if (!$(this).filter('.skill-more-btn').length) { if (!$(this).filter('.skill-click').length) { var clickTarget = this.hash } else { var clickTarget = $(this).parent().find(skillAnchor).attr('href') } smoothScrollSkill(clickTarget) } }) }) } function smoothScrollSkill(target, offset = 150, duration = 800, easing = 'easeInOutCirc') { var $target = $(target); $('html, body').stop().animate({ 'scrollTop': $target.offset().top - offset, }, duration, easing) } function closeBtn() { $closeBtn.on('click', function (e) { $mb.css({ marginBottom: 160 }); $list.addClass('has-skill-btn'); $list.find('li:gt(' + (defaultNum - 1) + ')').removeClass('visible').addClass('invisible').hide(); $('.skill-close-btn-height').css({ height: '86px' }); $closeBtn.hide(); $moreBtn.show(); var scrollAmount = $(window).scrollTop(); if (scrollAmount >= workListOffset) { $('html, body').scrollTop(defaultNumWorkOffset) } }) } var skillItemMaxHeight = getSkillItemMaxHeight(); $('.skill-item').each(function () { $(this).css({ height: skillItemMaxHeight, }) }); function getSkillItemMaxHeight() { var maxHeight, $list = $('.mb .skill-list'); $list.find(hiddenList).show(); $('.skill-item').each(function () { maxHeight = $(this).outerHeight() }); $list.find(hiddenList).hide(); return maxHeight } $('.skill-name:has(.num-pos)').each(function () { $(this).addClass('has-num-pos') }); $('.glide__slide:not(:has(.sub-skill))').each(function () { $(this).addClass('not-has-sub-skill') }); var work = '.works-library .work', $work = $(work), $overlay = $('.overlay'), $hidden = $('.hidden'), detailView = 'detail-view'; workPopUp(); var workPopUpTimer = 0; $(window).resize(function () { if (workPopUpTimer > 0) { clearTimeout(workPopUpTimer) } workPopUpTimer = setTimeout(function () { workPopUp() }, 1000) }).scroll(function () { workPopUp() }); function workPopUp() { if (window.matchMedia('(min-width: 600px)').matches) { $work.on('click', function () { var clone = $(this).clone(); $overlay.find('.hidden').append(clone); $overlay.css({ display: 'block', }).addClass(detailView); $('html').css({ overflow: 'hidden' }); $overlay.css({ top: $(window).scrollTop() - 48, height: ' calc(100vh + 48px)', }) }); $overlay.on('click', function () { $overlay.css({ display: 'none', }).removeClass(detailView).find('.hidden').empty(); $('html').css({ overflow: 'auto' }) }); $hidden.on('click', function (e) { e.stopPropagation() }) } else { $work.off(); $overlay.off(); $('html').css({ overflow: 'auto' }) } } var $workMoreBtn = $('.work-allow-more'); workMoreAndCloseBtn(); function workMoreAndCloseBtn() { var workOffsets = []; $workMoreBtn.on('click', function () { var index = $(this).parent().index(); if ($(this).find('.down-allow-more-btn').length) { $(this).find('.btn').removeClass('down-allow-more-btn').addClass('upp-allow-close-btn'); $(this).parent().addClass(detailView); $workMoreBtn.each(function () { var index = $(this).parent().index(), workOffset = $(this).parent().offset().top; workOffsets[index] = workOffset - 100 }) } else { $(this).find('.btn').removeClass('upp-allow-close-btn').addClass('down-allow-more-btn'); $(this).parent().removeClass(detailView) } var duration = 300, easing = 'easeInOutCirc'; $('html, body').animate({ scrollTop: workOffsets[index], }, duration, easing) }) } })